'use strict';

var app = angular.module('Meaniscule', ['ui.router', 'firebase', 'hmTouchEvents']);

app.config(function ($urlRouterProvider, $locationProvider) {
   // This turns off hashbang urls (/#about) and changes it to something normal (/about)
   $locationProvider.html5Mode(true);
   // If we go to a URL that ui-router doesn't have registered, go to the "/" url.
   $urlRouterProvider.otherwise('/');
});
"use strict";

app.directive("navbar", function () {
	return {
		restrict: "E",
		templateUrl: "/app/navbar/navbar.html"
	};
});
'use strict';

app.controller('HomeController', function ($scope, $http, $firebaseArray) {
  var socket = io();

  function initiate() {
    console.log('initiated!');
    paper.install(window);
    paper.setup('myCanvas');
  };

  initiate();

  var tool = new Tool();
  // var drawingRef = new Firebase("https://whereyourdrawinggetslost.firebaseio.com");
  // var drawing = $firebaseArray(drawingRef);

  $scope.msgFromScope = 'Try drawing something here!';

  var moon = new Path.Circle({
    position: view.center,
    radius: 30,
    fillColor: 'yellow'
  });

  moon.removeSegment(2);
  moon.smooth();
  moon.rotate(-30);

  var center = new Point(50, 50);
  var points = 5;
  var radius1 = 5;
  var radius2 = 10;
  var star = new Path.Star(center, points, radius1, radius2);
  star.fillColor = 'yellow';
  star.opacity = 0.7;

  var count = 50;

  view.onFrame = function (event) {
    star.fillColor.hue += 1;
    star.rotate(0.1);
  };

  socket.emit('sendtheNight', project);

  socket.on('gotIt', function (data) {
    console.log('yay', data);
  });
});
"use strict";

app.factory("DrawingFactory", function ($http) {
  return {
    loadCanvas: function loadCanvas() {
      return $http.get("/").then(function (response) {
        return response.data;
      });
    }
  };
});
'use strict';

app.config(function ($stateProvider) {
    $stateProvider.state('home', {
        url: '/',
        templateUrl: '/app/home/home.html',
        controller: 'HomeController'
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsIm5hdmJhci9uYXZiYXIuZGlyZWN0aXZlLmpzIiwiaG9tZS9ob21lLmNvbnRyb2xsZXIuanMiLCJob21lL2hvbWUuZmFjdG9yeS5qcyIsImhvbWUvaG9tZS5zdGF0ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksR0FBRyxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFLENBQUMsV0FBVyxFQUFFLFVBQVUsRUFBRSxlQUFlLENBQUMsQ0FBQyxDQUFDOztBQUVuRixHQUFHLENBQUMsTUFBTSxDQUFDLFVBQVUsa0JBQWtCLEVBQUUsaUJBQWlCLEVBQUU7O0FBRXpELG9CQUFpQixDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQzs7QUFFbEMscUJBQWtCLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0NBQ3BDLENBQUMsQ0FBQzs7O0FDUEgsR0FBRyxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUUsWUFBVTtBQUNqQyxRQUFPO0FBQ04sVUFBUSxFQUFFLEdBQUc7QUFDYixhQUFXLEVBQUUseUJBQXlCO0VBQ3RDLENBQUM7Q0FDRixDQUFDLENBQUM7OztBQ0xILEdBQUcsQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLEVBQUUsVUFBUyxNQUFNLEVBQUUsS0FBSyxFQUFFLGNBQWMsRUFBRTtBQUN2RSxNQUFJLE1BQU0sR0FBRyxFQUFFLEVBQUUsQ0FBQzs7QUFFbEIsV0FBUyxRQUFRLEdBQUk7QUFDbkIsV0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUMxQixTQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3RCLFNBQUssQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7R0FDekIsQ0FBQzs7QUFFRixVQUFRLEVBQUUsQ0FBQzs7QUFFWCxNQUFJLElBQUksR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDOzs7O0FBSXRCLFFBQU0sQ0FBQyxZQUFZLEdBQUcsNkJBQTZCLENBQUM7O0FBR3BELE1BQUksSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQztBQUN6QixZQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU07QUFDckIsVUFBTSxFQUFFLEVBQUU7QUFDVixhQUFTLEVBQUUsUUFBUTtHQUNwQixDQUFDLENBQUM7O0FBRUgsTUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN0QixNQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDZCxNQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7O0FBR2pCLE1BQUksTUFBTSxHQUFHLElBQUksS0FBSyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUMvQixNQUFJLE1BQU0sR0FBRyxDQUFDLENBQUM7QUFDZixNQUFJLE9BQU8sR0FBRyxDQUFDLENBQUM7QUFDaEIsTUFBSSxPQUFPLEdBQUcsRUFBRSxDQUFDO0FBQ2pCLE1BQUksSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztBQUMzRCxNQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQztBQUMxQixNQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQzs7QUFFbkIsTUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDOztBQUVmLE1BQUksQ0FBQyxPQUFPLEdBQUcsVUFBVSxLQUFLLEVBQUU7QUFDOUIsUUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO0FBQ3hCLFFBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7R0FDbEIsQ0FBQTs7QUFJRCxRQUFNLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxPQUFPLENBQUMsQ0FBQzs7QUFFckMsUUFBTSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsVUFBUyxJQUFJLEVBQUU7QUFDaEMsV0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7R0FDMUIsQ0FBQyxDQUFBO0NBRUgsQ0FBQyxDQUFDOzs7QUNwREgsR0FBRyxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsRUFBRSxVQUFVLEtBQUssRUFBRTtBQUM3QyxTQUFPO0FBQ0wsY0FBVSxFQUFFLHNCQUFZO0FBQ3RCLGFBQU8sS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FDcEIsSUFBSSxDQUFDLFVBQVUsUUFBUSxFQUFFO0FBQ3hCLGVBQU8sUUFBUSxDQUFDLElBQUksQ0FBQztPQUN0QixDQUFDLENBQUM7S0FDSjtHQUNGLENBQUE7Q0FDRixDQUFDLENBQUM7OztBQ1RILEdBQUcsQ0FBQyxNQUFNLENBQUMsVUFBVSxjQUFjLEVBQUU7QUFDakMsa0JBQWMsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFO0FBQ3pCLFdBQUcsRUFBRSxHQUFHO0FBQ1IsbUJBQVcsRUFBRSxxQkFBcUI7QUFDbEMsa0JBQVUsRUFBRSxnQkFBZ0I7S0FDL0IsQ0FBQyxDQUFDO0NBQ04sQ0FBQyxDQUFDIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoJ01lYW5pc2N1bGUnLCBbJ3VpLnJvdXRlcicsICdmaXJlYmFzZScsICdobVRvdWNoRXZlbnRzJ10pO1xuXG5hcHAuY29uZmlnKGZ1bmN0aW9uICgkdXJsUm91dGVyUHJvdmlkZXIsICRsb2NhdGlvblByb3ZpZGVyKSB7XG4gICAvLyBUaGlzIHR1cm5zIG9mZiBoYXNoYmFuZyB1cmxzICgvI2Fib3V0KSBhbmQgY2hhbmdlcyBpdCB0byBzb21ldGhpbmcgbm9ybWFsICgvYWJvdXQpXG4gICAkbG9jYXRpb25Qcm92aWRlci5odG1sNU1vZGUodHJ1ZSk7XG4gICAvLyBJZiB3ZSBnbyB0byBhIFVSTCB0aGF0IHVpLXJvdXRlciBkb2Vzbid0IGhhdmUgcmVnaXN0ZXJlZCwgZ28gdG8gdGhlIFwiL1wiIHVybC5cbiAgICR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy8nKTtcbn0pOyIsImFwcC5kaXJlY3RpdmUoXCJuYXZiYXJcIiwgZnVuY3Rpb24oKXtcblx0cmV0dXJuIHtcblx0XHRyZXN0cmljdDogXCJFXCIsXG5cdFx0dGVtcGxhdGVVcmw6IFwiL2FwcC9uYXZiYXIvbmF2YmFyLmh0bWxcIlxuXHR9O1xufSk7IiwiYXBwLmNvbnRyb2xsZXIoJ0hvbWVDb250cm9sbGVyJywgZnVuY3Rpb24oJHNjb3BlLCAkaHR0cCwgJGZpcmViYXNlQXJyYXkpIHtcbiAgdmFyIHNvY2tldCA9IGlvKCk7XG5cbiAgZnVuY3Rpb24gaW5pdGlhdGUgKCkgeyBcbiAgICBjb25zb2xlLmxvZygnaW5pdGlhdGVkIScpO1xuICAgIHBhcGVyLmluc3RhbGwod2luZG93KTtcbiAgICBwYXBlci5zZXR1cChcIm15Q2FudmFzXCIpO1xuICB9O1xuXG4gIGluaXRpYXRlKCk7XG5cbiAgdmFyIHRvb2wgPSBuZXcgVG9vbCgpO1xuICAvLyB2YXIgZHJhd2luZ1JlZiA9IG5ldyBGaXJlYmFzZShcImh0dHBzOi8vd2hlcmV5b3VyZHJhd2luZ2dldHNsb3N0LmZpcmViYXNlaW8uY29tXCIpO1xuICAvLyB2YXIgZHJhd2luZyA9ICRmaXJlYmFzZUFycmF5KGRyYXdpbmdSZWYpO1xuXG4gICRzY29wZS5tc2dGcm9tU2NvcGUgPSBcIlRyeSBkcmF3aW5nIHNvbWV0aGluZyBoZXJlIVwiO1xuXG5cbiAgdmFyIG1vb24gPSBuZXcgUGF0aC5DaXJjbGUoe1xuICAgIHBvc2l0aW9uOiB2aWV3LmNlbnRlcixcbiAgICByYWRpdXM6IDMwLFxuICAgIGZpbGxDb2xvcjogJ3llbGxvdycsXG4gIH0pO1xuXG4gIG1vb24ucmVtb3ZlU2VnbWVudCgyKTtcbiAgbW9vbi5zbW9vdGgoKTtcbiAgbW9vbi5yb3RhdGUoLTMwKTtcblxuXG4gIHZhciBjZW50ZXIgPSBuZXcgUG9pbnQoNTAsIDUwKTtcbiAgdmFyIHBvaW50cyA9IDU7XG4gIHZhciByYWRpdXMxID0gNTtcbiAgdmFyIHJhZGl1czIgPSAxMDtcbiAgdmFyIHN0YXIgPSBuZXcgUGF0aC5TdGFyKGNlbnRlciwgcG9pbnRzLCByYWRpdXMxLCByYWRpdXMyKTtcbiAgc3Rhci5maWxsQ29sb3IgPSAneWVsbG93JztcbiAgc3Rhci5vcGFjaXR5ID0gMC43O1xuXG4gIHZhciBjb3VudCA9IDUwO1xuXG4gIHZpZXcub25GcmFtZSA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgIHN0YXIuZmlsbENvbG9yLmh1ZSArPSAxO1xuICAgIHN0YXIucm90YXRlKDAuMSk7XG4gIH1cblxuXG5cbiAgc29ja2V0LmVtaXQoJ3NlbmR0aGVOaWdodCcsIHByb2plY3QpO1xuXG4gIHNvY2tldC5vbignZ290SXQnLCBmdW5jdGlvbihkYXRhKSB7XG4gICAgY29uc29sZS5sb2coJ3lheScsIGRhdGEpO1xuICB9KVxuXG59KTsiLCJhcHAuZmFjdG9yeSgnRHJhd2luZ0ZhY3RvcnknLCBmdW5jdGlvbiAoJGh0dHApIHtcbiAgcmV0dXJuIHtcbiAgICBsb2FkQ2FudmFzOiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gJGh0dHAuZ2V0KFwiL1wiKVxuICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG59KTsiLCJhcHAuY29uZmlnKGZ1bmN0aW9uICgkc3RhdGVQcm92aWRlcikge1xuICAgICRzdGF0ZVByb3ZpZGVyLnN0YXRlKCdob21lJywge1xuICAgICAgICB1cmw6ICcvJyxcbiAgICAgICAgdGVtcGxhdGVVcmw6ICcvYXBwL2hvbWUvaG9tZS5odG1sJyxcbiAgICAgICAgY29udHJvbGxlcjogJ0hvbWVDb250cm9sbGVyJ1xuICAgIH0pO1xufSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9